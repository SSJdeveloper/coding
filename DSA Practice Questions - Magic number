Magic number

standard input/output: 2s/128000 kB

A magic number is a natural number that contains both the digits 7 and 9 in it. For eg:- 79, 879, 53729 etc.
Given a number N, your task is to find the closest Magic number from the given number N.

Note:- If more than one answer exists return the minimum one
Input
User Task:
Since this will be a functional problem, you don't have to take input. You just have to complete the function MagicNumber() that takes integer N as argument.

Constraints:-
1 <= N <= 100000




code====


static int MagicNumber(int N){
//Enter your code here
if (N >= 79)
	{
        int a = 0;
		while (true) 
		{
			int first = N-a;
			int second = N+a;
			
			if (isDigitPresent(first))
				return first;
			
			if(isDigitPresent(second))
				return second;
			
			a++;
		}
	}
	
	else 
	{        // Check all numbers one by one
		return 79;
	}

		    
}

static boolean isDigitPresent(int x)
{ 
	while (x > 0)
	{
		if (x % 10 == 7)
		{
			while ( x > 0)
			{
			    if ( x % 10 == 9)
			    {
			        break;
			    }
			     x = x / 10;
			}
			break;
		}
			            
		else if (x % 10 == 9)
		{
			while ( x > 0)
			{
			    if ( x % 10 == 7)
			    {
			        break;
			    }
			    
				x = x / 10;
			}
			    break;
		}
			x = x / 10;
	}
			        // If loop broke
	return (x > 0);
			 

}
